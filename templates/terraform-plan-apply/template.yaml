# Run terraform init and terraform plan
parameters:
  - name: 'AZURE_SERVICE_CONNECTION_NAME'
    displayName: '(Required) Azure service connection name.'
    type: string
  - name: 'ENVIRONMENT'
    displayName: '(Required) Environment to apply to. Possible values are [dev|uat|prod] etc.'
    type: string
  - name: 'WORKINGDIR'
    displayName: '(Optional) Working direcory containing terraform templates and the terraform.sh helper.'
    type: string
    default: "src"
  - name: 'AKS_NAME'
    displayName: '(Optional) AKS Name'
    type: string
    default: ""
  - name: 'AKS_API_SERVER_URL'
    displayName: '(Optional) AKS api server url like (e.g. https://my-url.com:443)'
    type: string
    default: ""
  - name: 'AKS_AZURE_DEVOPS_SA_CA_CRT'
    displayName: '(Optional) AKS service account CA cert, used by azure devops account'
    type: string
    default: ""
  - name: 'AKS_AZURE_DEVOPS_SA_TOKEN'
    displayName: '(Optional) AKS service account token, used by azure devops account'
    type: string
    default: ""


stages:
  - stage: dev_tf_plan_rtd_common
    dependsOn: []
    condition: and(succeeded(), eq(${{parameters.ENVIRONMENT}}, 'DEV'))
    pool:
      name: cstar-dev-linux
    jobs:
      #
      # rtd_common
      #
      - job: tf_plan_rtd_common
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
          # 1. Install terraform
          - template: ../terraform-setup/template.yaml@terraform
          # # 2. Run terraform plan
          # - template: templates/terraform-plan/template.yaml@terraform
          #   parameters:
          #     ENVIRONMENT: "dev"
          #     WORKINGDIR: 'src/domains/rtd-common'
          #     AZURE_SERVICE_CONNECTION_NAME: DEV-CSTAR-SERVICE-CONN

  - stage: dev_tf_apply_rtd_common
    dependsOn: [tf_plan_rtd_common]
    condition: and(succeeded(), eq(${{parameters.DEV}}, true))
    pool:
      name: cstar-dev-linux
    jobs:
      - deployment: tf_apply_rtd_common
        continueOnError: false
        environment: 'DEV'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                # 1. Install terraform
                - template: ../terraform-setup/template.yaml@terraform
                # # 2. Run terraform apply
                # - template: templates/terraform-apply/template.yaml@terraform
                #   parameters:
                #     ENVIRONMENT: "dev"
                #     WORKINGDIR: 'src/domains/rtd-common'
                #     AZURE_SERVICE_CONNECTION_NAME: DEV-CSTAR-SERVICE-CONN
